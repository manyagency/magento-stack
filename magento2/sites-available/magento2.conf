## Maps config file
include conf_m2/maps.conf;

pagespeed StatisticsLogging on;
pagespeed StatisticsPath /ngx_pagespeed_statistics;
pagespeed GlobalStatisticsPath /ngx_pagespeed_global_statistics;
pagespeed MessagesPath /ngx_pagespeed_message;
pagespeed ConsolePath /pagespeed_console;
pagespeed AdminPath /pagespeed_admin;
pagespeed GlobalAdminPath /pagespeed_global_admin;

pagespeed MessageBufferSize 100000;

# Define a mapping used to mark HTML as uncacheable.
map $upstream_http_content_type $new_cache_control_header_val {
    default $upstream_http_cache_control;
    "~*text/html" "no-cache, max-age=0";
}

server {

    listen 8080 reuseport default_server;
    server_name _;

    access_log /var/log/nginx/access.log main;
    error_log /var/log/nginx/error.log error;

    if ($bad_client) {
        return 403;
    }

    # PageSpeed's beacon dependent filters need the cache to let some requests
    # through to the backend.  This code below depends on the ngx_set_misc
    # module and randomly passes 5% of traffic to the backend for rebeaconing.
    set $should_beacon_header_val "";
    set_random $rand 0 100;
    if ($rand ~* "^[0-4]$") {
        set $should_beacon_header_val "SECRETKEY";
        set $bypass_cache 1;
    }

    ## Set Magento root folder
    set $MAGE_ROOT /var/www/html;

    ## Set main public directory /pub
    root $MAGE_ROOT/pub;

    ## Redirect anything with a trailing slash to the non-trailing-slahs version
    ##rewrite ^/(.*)/$ /$1 permanent;

    ## Nginx and php-fpm status
    include conf_m2/pagespeed.conf;

    ## Nginx and php-fpm status
    include conf_m2/status.conf;

    ## Server maintenance block.
    #include conf_m2/maintenance.conf;

    ## Magento Setup Tool
    include conf_m2/setup.conf;

    ## Deny all internal locations
    location ~ ^/(app|generated|lib|bin|var|tmp|phpserver|vendor)/ {
        deny all;
    }

    location / {

        # What servers should we accept PURGE requests from?  If PageSpeed isn't
        # running on the same server as your cache, list the IP(s) of the
        # PageSpeed machine(s) here.
        #
        # This requires rebuilding with the ngx_cache_purge module:
        #   https://github.com/FRiCKLE/ngx_cache_purge
        proxy_cache_purge PURGE from 127.0.0.1;

        # Mark HTML as uncacheable.  If we can't send them purge requests they
        # can't cache our html.  Uses the map defined above.
        proxy_hide_header Cache-Control;
        add_header Cache-Control $new_cache_control_header_val;

        # Tell PageSpeed not to use optimizations specific to this request.
        proxy_set_header PS-CapabilityList "fully general optimizations only";

        # See discussion of rebeaconing above.
        proxy_cache_bypass $bypass_cache;
        proxy_hide_header PS-ShouldBeacon;
        proxy_set_header PS-ShouldBeacon $should_beacon_header_val;

        try_files $uri $uri/ /index.php$is_args$args;
    }

    ## Error log/page
    include conf_m2/error_page.conf;

    ## Static location
    include conf_m2/assets.conf;

    ## Protect extra directories
    include conf_m2/extra_protect.conf;

    ## Process php files (strict rule, define files to be executed)
    location ~ (index|health_check|get|static|report|404|503)\.php$ {

        try_files $uri =404;
        #    fastcgi_intercept_errors on;
        include conf_m2/php_backend.conf;

        ## Enable Magento profiler
        #    fastcgi_param   MAGE_PROFILER html;

        ## Store code with multi domain
        #    fastcgi_param   MAGE_RUN_CODE $MAGE_RUN_CODE;
        #    fastcgi_param   MAGE_RUN_TYPE $MAGE_RUN_TYPE;

        ## Enable POST logging in admin
        #    if ($request_method = POST) {set $adminpost A;}
        #    if ($request_uri ~* "/ADMIN_PLACEHOLDER/") {set $adminpost "${adminpost}B";}
        #    if ($adminpost = AB) { access_log /var/log/nginx/admin_post.log adminpost;}
    }

    ## Block other undefined php files, possible injections and random malware hooks.
    location ~* \.php$ {
        return 404;
    }
}
